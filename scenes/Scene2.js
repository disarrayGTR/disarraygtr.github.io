class Scene2 extends Phaser.Scene {
    constructor() {
        super({ key: 'Scene2' });
    }

    preload() {
        // –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞
        this.load.image('bot-install', 'data:image/svg+xml;base64,' + btoa(`
            <svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
                <rect width="800" height="600" fill="#f0f8ff"/>
                <circle cx="400" cy="300" r="100" fill="#007acc" opacity="0.1"/>
                <circle cx="400" cy="300" r="60" fill="#007acc" opacity="0.3"/>
                <circle cx="400" cy="300" r="30" fill="#007acc"/>
                <rect x="350" y="280" width="100" height="40" fill="#fff" rx="5"/>
                <text x="400" y="305" font-family="Arial" font-size="16" text-anchor="middle" fill="#007acc">BOT</text>
            </svg>
        `));
    }

    create() {
        const { width, height } = this.scale;
        
        // –§–æ–Ω
        this.add.image(width/2, height/2, 'bot-install').setDisplaySize(width, height);
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        this.add.text(width/2, 80, GAME_CONFIG.texts.scene2.title, {
            fontSize: '28px',
            fontFamily: 'Arial, sans-serif',
            fill: '#333',
            fontStyle: 'bold'
        }).setOrigin(0.5);
        
        // –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
        const descText = this.add.text(width/2, 150, GAME_CONFIG.texts.scene2.description, {
            fontSize: '18px',
            fontFamily: 'Arial, sans-serif',
            fill: '#555',
            align: 'center'
        }).setOrigin(0.5);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        this.createLoadingAnimation();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º Telegram –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        this.createTelegramUI(width, height);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        this.time.delayedCall(3000, () => {
            this.showSuccessMessage();
        });
    }
    
    createLoadingAnimation() {
        const dots = [];
        for (let i = 0; i < 3; i++) {
            const dot = this.add.circle(this.scale.width/2 - 20 + i * 20, 200, 5, 0x007acc).setAlpha(0.3);
            dots.push(dot);
            
            this.tweens.add({
                targets: dot,
                alpha: { from: 0.3, to: 1 },
                duration: 400,
                delay: i * 200,
                yoyo: true,
                repeat: -1
            });
        }
    }
    
    createTelegramUI(width, height) {
        // –°–æ–∑–¥–∞–µ–º –∏–º–∏—Ç–∞—Ü–∏—é Telegram –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        const telegramBg = this.add.rectangle(width/2, height/2 + 50, 300, 200, 0x2481cc, 0.9);
        
        this.add.text(width/2, height/2 - 30, 'üí¨ Telegram Bot', {
            fontSize: '16px',
            fontFamily: 'Arial, sans-serif',
            fill: '#fff',
            fontStyle: 'bold'
        }).setOrigin(0.5);
        
        // –°–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
        const messages = [
            '–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ ü§ñ',
            '–ì–æ—Ç–æ–≤ –æ—Ç–≤–µ—á–∞—Ç—å 24/7',
            '–°–æ–±–∏—Ä–∞—é –∑–∞—è–≤–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏'
        ];
        
        messages.forEach((msg, index) => {
            this.time.delayedCall(1000 + index * 800, () => {
                this.add.text(width/2 - 120, height/2 + index * 25, msg, {
                    fontSize: '12px',
                    fontFamily: 'Arial, sans-serif',
                    fill: '#fff'
                }).setOrigin(0);
            });
        });
    }
    
    showSuccessMessage() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        const successBg = this.add.rectangle(this.scale.width/2, this.scale.height - 120, 300, 80, 0x28a745);
        
        this.add.text(this.scale.width/2, this.scale.height - 140, GAME_CONFIG.texts.scene2.success, {
            fontSize: '20px',
            fontFamily: 'Arial, sans-serif',
            fill: '#fff',
            fontStyle: 'bold'
        }).setOrigin(0.5);
        
        // –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
        const continueBtn = this.add.rectangle(this.scale.width/2, this.scale.height - 100, 150, 40, 0x007acc)
            .setInteractive()
            .on('pointerdown', () => this.scene.start('Scene3'))
            .on('pointerover', () => continueBtn.setFillStyle(0x005fa3))
            .on('pointerout', () => continueBtn.setFillStyle(0x007acc));
            
        this.add.text(this.scale.width/2, this.scale.height - 100, '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', {
            fontSize: '14px',
            fontFamily: 'Arial, sans-serif',
            fill: '#fff'
        }).setOrigin(0.5);
    }
}
